#default configure
#Update Date: 2021.02.19 22:34:05 +0000
#author: Loon

[General]
# 跳过某个IP段
skip-proxy = 192.168.0.0/16,10.0.0.0/8,172.16.0.0/12,localhost,*.local,e.crashlynatics.com
bypass-tun = 10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,192.168.0.0/16,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,255.255.255.255/32

# DNS server
dns-server = system,119.29.29.29,223.5.5.5

# Doh server, only for Wireformat
#doh-server = https://example.com/dns-query

allow-udp-proxy = false

# Wi-Fi 访问
# > 允许 Wi-Fi 网络下其它设备访问
allow-wifi-access = false
wifi-access-http-port = 7222
wifi-access-socket5-port = 7221

# > 解决一些ip请求无法匹配域名类规则的问题。real-ip指定的域名将不返回fake ip响应，直接将dns请求发往目标dns服务器
real-ip = *.apple.com, *apple.com

# > 代理测试
proxy-test-url = http://www.gstatic.com/generate_204
# > 代理测试超时时间
test-timeout = 3

# 资源解析器
# resource-parser = https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/scripts/sub-store-parser.js
# ssid-trigger参数，用于指定SSID下流量模式切换，（default表示默认，cellular表示蜂窝，目前支持三种值：rule，direct，proxy）
# ssid-trigger = SSID-DIRECT

# >手动添加的节点
[Proxy]


# >机场订阅
[Remote Proxy]
# 订阅节点
# 别名 = 订阅URL
#Subs = https://example/server-complete.txt
#Subs2 = https://example2/server-complete.txt

# >筛选订阅节点
[Remote Filter]
# 筛选订阅节点，筛选后的结果可加入到策略组中，目前支持三种筛选方式
# NodeSelect: 使用在UI上选择的节点。
# NameKeyword: 根据提供的关键词对订阅中所有节点的名称进行筛选，使用筛选后的节点。
# NameRegex: 根据提供的正则表达式对订阅中所有节点的名称进行筛选，使用筛选后的节点。
香港节点 = NameRegex, FilterKey = "(?i)(香港|HK|Hong)"
日本节点 = NameRegex, FilterKey = "(?i)(日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan)"
新加坡节点 = NameRegex, FilterKey = "(?i)(新加坡|坡|狮城|SG|Singapore)"
俄罗斯节点 = NameRegex, FilterKey = "(?i)(俄罗斯|俄国|俄|RUS|Russia)"

# >策略组
[Proxy Group]
# 节点选项
#PROXY = select,Auto,1,2,3,4,Subs
FINAL = select,PROXY,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Final.png
全球直连 = select,DIRECT,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Direct.png
全球拦截 = select,REJECT,DIRECT,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Reject.png
PROXY = select,HK,SG,JP,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Proxy.png
Apple = select,DIRECT,PROXY,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Apple.png
YouTube = select,HK,SG,JP,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/YouTube.png
Telegram = select,HK,SG,JP,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram.png
BBCOIN = select,JP,SG,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Cryptocurrency.png
HBCOIN = select,HK,SG,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Cryptocurrency_1.png
HK = load-balance,香港,url = http://www.gstatic.com/generate_204,interval = 600,max-timeout = 3000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Hong_Kong.png
SG = load-balance,新加坡,url = http://www.gstatic.com/generate_204,interval = 600,max-timeout = 3000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Singapore.png
JP = load-balance,日本,url = http://www.gstatic.com/generate_204,interval = 600,max-timeout = 3000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Japan.png

# url-test模式，给提供的url发出http header请求，根据返回结果，选择测速最快的节点，默认间隔600s，测速超时时间5s，为了避免资源浪费，建议节点数不要过多，只支持单个节点和远端节点，其他会被忽略
#Auto = url-test,1,2,3,4,Subs,url = http://bing.com/,interval = 600

# fallback模式，和url-test类似，不同的是会根据顺序返回第一个可用的节点，为了避免资源浪费，建议节点数不要过多，只支持单个节点和远端节点，其他会被忽略
#Auto1 = fallback,1,2,3,4,Subs,url = http://bing.com/,interval = 600

# 别名 = ssid，默认 = 策略， 蜂窝 = 策略， ssid名称 = 策略
#SSID = ssid, default = PROXY, cellular = DIRECT, "DivineEngine" = PROXY

#负载均衡，可选三种算法：random：随机选择策略组可用节点，round-robin：轮询策略组可用节点，pcc：在random基础上，针对相同host使用同一节点，此处url用来测试节点可用性，每隔interval进行一次测速，max-timeout参数用于筛选测试时间超过max-timeout的节点为不可用节点
#LoadBalance = load-balance,node1,node2,remoteNodes, url = http://bing.com, interval = 600,algorithm = pcc, max-timeout=3000

# 广告模式
#Advertising = select,REJECT,DIRECT

# 白名单模式 PROXY，黑名单模式 DIRECT
#Final = select,PROXY,DIRECT


# >本地分流规则
[Rule]
# Local RULE
# Type:DOMAIN-SUFFIX,DOMAIN,DOMAIN-KEYWORD,USER-AGENT,URL-REGEX,IP-CIDR
# Strategy:DIRECT,Proxy,REJECT
# Options:no-resolve(no-resolve(only for cidr))
# GeoIP China
GEOIP,CN,DIRECT
FINAL,FINAL


# >分流规则 远程订阅
[Remote Rule]
# Remote Rule
# 订阅规则URL,策略
# PROXY
# https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rule/ExampleRule.list,policy=PROXY,enabled=true
https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/LocalAreaNetwork.list, policy=全球直连, tag=本地网络-直连,enabled=true
https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/UnBan.list, policy=全球直连, tag=去广告白名单-直连, enabled=true
https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanAD.list, policy=全球拦截, tag=常见关键字去广告-拦截, enabled=true
https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanProgramAD.list, policy=全球拦截, tag=常见应用内去广告-拦截, enabled=true
https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/GoogleCN.list, policy=全球直连, tag=谷歌国内业务-直连, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/TestFlight/TestFlight.list, policy=PROXY, tag=Apple, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Apple/Apple.list, policy=Apple, tag=苹果服务-直连, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/YouTube/YouTube.list, policy=YouTube, tag=YouTube, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Speedtest/Speedtest.list, policy=Speedtest, tag=Speedtest, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Telegram/Telegram.list, policy=电报分流-代理, tag=Telegram, enabled=true
https://raw.githubusercontent.com/internalsync/tutu/main/loon/rule/bb.list, policy=BBCOIN, tag=BBCOIN, enabled=true
https://raw.githubusercontent.com/internalsync/tutu/main/loon/rule/hb.list, policy=HBCOIN, tag=HBCOIN, enabled=true


# >本地URL复写
[Rewrite]
enable = true
# Redirect Google Search Service
^https?:\/\/(www.)?(g|google)\.cn https://www.google.com 302


# >远程URL复写订阅
[Remote Rewrite]
# 订阅 URL Rewrite
# 订阅url,别名(可选)
https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rewrite/AutoRewrite_Example.list,tag=auto,enable=true


[Host]
#可以指定一下四种模式：
#1、指定域名使用对应的IP地址
#2、将域名指向另一个域名
#3、指定域名请求DNS时使用特定的DNS服务器，格式为：google.com = server:8.8.8.8 或者 *.baidu.com = server:https://example.com/dns-query
#4、指定具体的SSID环境下使用特定的DNS服务器


[Script]
#enable = true
# http-request 处理请求的脚本
# http-response 处理请求响应的脚本
# cron 定时脚本
# network-changed   网络发生变化触发脚本
# generic  通用型脚本，可用在操作节点/策略组中，执行是会带入节点名称和策略组名称，脚本必须在开启NE时

# http-request ^https?:\/\/(www.)?(example)\.com script-path=localscript.js,tag = requestScript,enable=true
# http-response ^https?:\/\/(www.)?(example)\.com script-path=https://example.com/loon.js,timeout=10,requires-body = true,tag = responseScript,enable=true
# cron "0 8 * * *" script-path=cron.js,tag = responseScript,enable=true

#network-changed script-path=https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Script/netChanged.js, tag=changeModel,enable=true

#generic script-path=https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Script/generic_example.js,tag=GeoLocation,timeout=10,img-url=location.fill.viewfinder.system


# >远程脚本订阅
[Remote Script]
# https://example.com/loon.js, tag=scripts, enable=true


# >插件
[Plugin]
# plugin-url tag=tag,proxy=插件中PROXY所指向的策略,enable=true
# plugin策略可设置为DIRECT,REJECT,PROXY，其中PROXY为用户在app中手动映射的策略，rule后不跟随策略默认使用PROXY
# example: https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rewrite/AutoRewrite_Example.list,tag=boxjs,enable=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/AdvertisingLite/AdvertisingLite.plugin, policy=REJECT, tag=Adv, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/Redirect/Redirect.plugin, tag=General, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/smzdm/smzdm_remove_ads.lnplugin, policy=REJECT, tag=SMZDM, enabled=true
https://raw.githubusercontent.com/Tartarus2014/For-own-use/master/Loon/Plugin/HKMTMedia.plugin, policy=REJECT, tag=HKMTMedia, enabled=true
https://raw.githubusercontent.com/Tartarus2014/For-own-use/master/Loon/Plugin/TikTokJP.plugin, policy=JP, tag=TiktokJP, enabled=true


[MITM]
hostname = 
enable = true
skip-server-cert-verify = true
#ca-p12 =
#ca-passphrase =
